syntax = "proto3";
option go_package = "github.com/rommms07/blogs/pb";
option optimize_for = SPEED;

import "schemas.proto";
import "google/protobuf/any.proto";

package blogs;

enum ReactActionTarget {
  T_POST = 0;
  T_COMMENT = 1;
}

enum PostActionDescriptor {
  POST_D_NULL = 0;
}

enum CommentActionDescriptor {
  COMMNET_D_NULL = 0;
}

enum AuthorActionDescriptor {
  AUTHOR_D_NULL = 0;
}

message ReactRequest {
  blogs.ReactActionTarget type = 1;
  google.protobuf.Any target = 2;
}

message ReactResponse {
  blogs.ReactActionTarget type = 1;
  google.protobuf.Any op_desc = 2;
}

message PostRequest {
  blogs.PostActionDescriptor type = 1;
  optional blogs.Post post = 2;
}
message PostResponse {
  blogs.PostActionDescriptor type = 1;
  google.protobuf.Any op_desc = 2;
}

message CommentRequest {
  blogs.CommentActionDescriptor type = 1;
  optional blogs.Comment comment = 2;
}
message CommentResponse {
  blogs.CommentActionDescriptor type = 1;
  google.protobuf.Any op_desc = 2;
}

message AuthorRequest {
  blogs.AuthorActionDescriptor type = 1;
  optional blogs.User author = 2;
}

message AuthorResponse {
  blogs.AuthorActionDescriptor type = 1;
  google.protobuf.Any op_desc = 2;
}

service BlogService {
  rpc NewComment(CommentRequest) returns (CommentResponse);
  rpc EditComment(CommentRequest) returns (CommentResponse);
  rpc DeleteComment(CommentRequest) returns (CommentResponse);
  rpc Reply(CommentRequest) returns (CommentResponse);
  rpc React(ReactRequest) returns (ReactResponse);
}

service UserService {
  rpc NewUser(AuthorRequest) returns (AuthorResponse);
  rpc EditUser(AuthorRequest) returns (AuthorResponse);
  rpc DeleteUser(AuthorRequest) returns (AuthorResponse);
}

service AuthorService {
  rpc NewPost(PostRequest) returns (PostResponse);
  rpc EditPost(PostRequest) returns (PostResponse);
  rpc DeletePost(PostRequest) returns (PostResponse);
}

